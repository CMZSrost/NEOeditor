# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Pytrain\NEOeditor\Editor_UI\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main(object):
    def setupUi(self, main):
        main.setObjectName("main")
        main.resize(1050, 650)
        main.setMouseTracking(True)
        self.centralwidget = QtWidgets.QWidget(main)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.splitter = QtWidgets.QSplitter(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.splitter.setFrameShadow(QtWidgets.QFrame.Plain)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setOpaqueResize(True)
        self.splitter.setChildrenCollapsible(True)
        self.splitter.setObjectName("splitter")
        self.tabWidget = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMaximumSize(QtCore.QSize(250, 16777215))
        self.tabWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_file = QtWidgets.QWidget()
        self.tab_file.setObjectName("tab_file")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tab_file)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineEdit_file = QtWidgets.QLineEdit(self.tab_file)
        self.lineEdit_file.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_file.sizePolicy().hasHeightForWidth())
        self.lineEdit_file.setSizePolicy(sizePolicy)
        self.lineEdit_file.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.lineEdit_file.setObjectName("lineEdit_file")
        self.verticalLayout.addWidget(self.lineEdit_file)
        self.treeWidget_file = sourceTree(self.tab_file)
        self.treeWidget_file.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_file.sizePolicy().hasHeightForWidth())
        self.treeWidget_file.setSizePolicy(sizePolicy)
        self.treeWidget_file.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.treeWidget_file.setItemsExpandable(True)
        self.treeWidget_file.setHeaderHidden(True)
        self.treeWidget_file.setExpandsOnDoubleClick(False)
        self.treeWidget_file.setObjectName("treeWidget_file")
        self.verticalLayout.addWidget(self.treeWidget_file)
        self.tabWidget.addTab(self.tab_file, "")
        self.tab_elem = QtWidgets.QWidget()
        self.tab_elem.setObjectName("tab_elem")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_elem)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.lineEdit_data = QtWidgets.QLineEdit(self.tab_elem)
        self.lineEdit_data.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_data.sizePolicy().hasHeightForWidth())
        self.lineEdit_data.setSizePolicy(sizePolicy)
        self.lineEdit_data.setObjectName("lineEdit_data")
        self.verticalLayout_3.addWidget(self.lineEdit_data)
        self.treeWidget_data = sourceTree(self.tab_elem)
        self.treeWidget_data.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_data.sizePolicy().hasHeightForWidth())
        self.treeWidget_data.setSizePolicy(sizePolicy)
        self.treeWidget_data.setMouseTracking(True)
        self.treeWidget_data.setItemsExpandable(True)
        self.treeWidget_data.setHeaderHidden(True)
        self.treeWidget_data.setExpandsOnDoubleClick(False)
        self.treeWidget_data.setObjectName("treeWidget_data")
        self.verticalLayout_3.addWidget(self.treeWidget_data)
        self.tabWidget.addTab(self.tab_elem, "")
        self.fileEditor = tabEditor(self.splitter)
        self.fileEditor.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fileEditor.sizePolicy().hasHeightForWidth())
        self.fileEditor.setSizePolicy(sizePolicy)
        self.fileEditor.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.fileEditor.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.fileEditor.setTabPosition(QtWidgets.QTabWidget.North)
        self.fileEditor.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.fileEditor.setElideMode(QtCore.Qt.ElideNone)
        self.fileEditor.setUsesScrollButtons(True)
        self.fileEditor.setDocumentMode(False)
        self.fileEditor.setTabsClosable(True)
        self.fileEditor.setMovable(True)
        self.fileEditor.setTabBarAutoHide(False)
        self.fileEditor.setObjectName("fileEditor")
        self.elemEditor = tabEditor(self.splitter)
        self.elemEditor.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.elemEditor.sizePolicy().hasHeightForWidth())
        self.elemEditor.setSizePolicy(sizePolicy)
        self.elemEditor.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.elemEditor.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.elemEditor.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.elemEditor.setElideMode(QtCore.Qt.ElideNone)
        self.elemEditor.setDocumentMode(False)
        self.elemEditor.setTabsClosable(True)
        self.elemEditor.setMovable(True)
        self.elemEditor.setObjectName("elemEditor")
        self.horizontalLayout.addWidget(self.splitter)
        self.horizontalLayout_2.addWidget(self.groupBox)
        main.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(main)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1050, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        main.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(main)
        self.statusbar.setObjectName("statusbar")
        main.setStatusBar(self.statusbar)
        self.newProjectAction = QtWidgets.QAction(main)
        self.newProjectAction.setObjectName("newProjectAction")
        self.loadProjectAction = QtWidgets.QAction(main)
        self.loadProjectAction.setStatusTip("")
        self.loadProjectAction.setObjectName("loadProjectAction")
        self.saveProjectAction = QtWidgets.QAction(main)
        self.saveProjectAction.setObjectName("saveProjectAction")
        self.reloadAction = QtWidgets.QAction(main)
        self.reloadAction.setObjectName("reloadAction")
        self.saveFileAction = QtWidgets.QAction(main)
        self.saveFileAction.setObjectName("saveFileAction")
        self.printFocusAction = QtWidgets.QAction(main)
        self.printFocusAction.setEnabled(True)
        self.printFocusAction.setShortcutContext(QtCore.Qt.WidgetShortcut)
        self.printFocusAction.setObjectName("printFocusAction")
        self.languageAction = QtWidgets.QAction(main)
        self.languageAction.setCheckable(True)
        self.languageAction.setChecked(False)
        self.languageAction.setObjectName("languageAction")
        self.helpAction = QtWidgets.QAction(main)
        self.helpAction.setObjectName("helpAction")
        self.recipesAnalysisAction = QtWidgets.QAction(main)
        self.recipesAnalysisAction.setEnabled(False)
        self.recipesAnalysisAction.setObjectName("recipesAnalysisAction")
        self.showRecipesAction = QtWidgets.QAction(main)
        self.showRecipesAction.setEnabled(False)
        self.showRecipesAction.setObjectName("showRecipesAction")
        self.menu.addAction(self.loadProjectAction)
        self.menu.addAction(self.saveProjectAction)
        self.menu_2.addAction(self.languageAction)
        self.menu_3.addAction(self.reloadAction)
        self.menu_3.addAction(self.recipesAnalysisAction)
        self.menu_3.addAction(self.showRecipesAction)
        self.menu_3.addAction(self.helpAction)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())

        self.retranslateUi(main)
        self.tabWidget.setCurrentIndex(0)
        self.elemEditor.setCurrentIndex(-1)
        self.loadProjectAction.triggered.connect(main.load_project) # type: ignore
        self.treeWidget_file.doubleClicked['QModelIndex'].connect(main.double_click) # type: ignore
        self.treeWidget_data.doubleClicked['QModelIndex'].connect(main.double_click) # type: ignore
        self.elemEditor.tabCloseRequested['int'].connect(main.remove_data_tab) # type: ignore
        self.fileEditor.tabCloseRequested['int'].connect(main.remove_file_tab) # type: ignore
        self.lineEdit_file.textChanged['QString'].connect(self.treeWidget_file.filter_file) # type: ignore
        self.lineEdit_data.textChanged['QString'].connect(self.treeWidget_data.filter_file) # type: ignore
        self.reloadAction.triggered.connect(main.reload) # type: ignore
        self.saveProjectAction.triggered.connect(main.save_project) # type: ignore
        self.saveFileAction.triggered.connect(main.save_file) # type: ignore
        self.languageAction.toggled['bool'].connect(main.change_language) # type: ignore
        self.helpAction.triggered.connect(main.help) # type: ignore
        self.treeWidget_data.itemEntered['QTreeWidgetItem*','int'].connect(self.treeWidget_data.show_tooltips) # type: ignore
        self.recipesAnalysisAction.triggered.connect(main.recipe_analysis) # type: ignore
        self.showRecipesAction.triggered.connect(main.recipe_show) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(main)

    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "NEO editor"))
        self.treeWidget_file.headerItem().setText(0, _translate("main", "file"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_file), _translate("main", "file"))
        self.treeWidget_data.headerItem().setText(0, _translate("main", "data"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_elem), _translate("main", "data"))
        self.menu.setTitle(_translate("main", "file"))
        self.menu_2.setTitle(_translate("main", "setting"))
        self.menu_3.setTitle(_translate("main", "function"))
        self.newProjectAction.setText(_translate("main", "new project"))
        self.newProjectAction.setToolTip(_translate("main", "new project"))
        self.loadProjectAction.setText(_translate("main", "load project"))
        self.saveProjectAction.setText(_translate("main", "save project"))
        self.saveProjectAction.setShortcut(_translate("main", "Ctrl+Shift+S"))
        self.reloadAction.setText(_translate("main", "reload"))
        self.reloadAction.setToolTip(_translate("main", "reload"))
        self.reloadAction.setShortcut(_translate("main", "F5"))
        self.saveFileAction.setText(_translate("main", "save file"))
        self.saveFileAction.setShortcut(_translate("main", "Ctrl+S"))
        self.printFocusAction.setText(_translate("main", "printFocus"))
        self.printFocusAction.setShortcut(_translate("main", "F1"))
        self.languageAction.setText(_translate("main", "change language"))
        self.languageAction.setToolTip(_translate("main", "change to Chinese"))
        self.helpAction.setText(_translate("main", "help"))
        self.helpAction.setShortcut(_translate("main", "F1"))
        self.recipesAnalysisAction.setText(_translate("main", "recipesAnalysis"))
        self.showRecipesAction.setText(_translate("main", "showRecipes"))
from sourceTree import sourceTree
from tabEditor import tabEditor
